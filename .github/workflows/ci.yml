name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1. Build Docker Images for Components
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Frontend Container
        run: docker build -t saadrehman17100/frontend:latest -f Dockerfile .

      - name: Build Backend Container (if applicable)
        run: docker build -t saadrehman17100/backend:latest -f Dockerfile .

      - name: Push Frontend Image to DockerHub
        run: docker push saadrehman17100/frontend:latest

      - name: Push Backend Image to DockerHub
        run: docker push saadrehman17100/backend:latest

  # 2. Run Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test -- --json --outputFile=test-results.json

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.json

  # 3. Linter Job (ESLint)
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: npm install eslint --save-dev

      - name: Run ESLint
        run: npx eslint ./ --ext .ts,.tsx --fix

  # 4. SAST Job (Semgrep)
  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Semgrep
        run: |
          curl -sSL https://get.semgrep.dev | bash

      - name: Run Semgrep for Security Analysis
        run: semgrep --config=p/ci .