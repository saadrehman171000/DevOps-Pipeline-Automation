name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1. Build Docker Images for Components
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Frontend Container
        run: docker build -t my-dockerhub-repo/frontend:latest -f Dockerfile .

      - name: Build Backend Container (if applicable)
        run: docker build -t my-dockerhub-repo/backend:latest -f Dockerfile .

      - name: Push Frontend Image to DockerHub
        run: docker push my-dockerhub-repo/frontend:latest

      - name: Push Backend Image to DockerHub
        run: docker push my-dockerhub-repo/backend:latest

  # 2. Run Unit Tests
  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

  # 3. Linter Job (ESLint)
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: npm install eslint --save-dev

      - name: Run ESLint
        run: npx eslint ./ --ext .ts,.tsx

  # 4. SAST Job (Semgrep)
  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Semgrep for Security Analysis
        run: semgrep --config=p/ci .

